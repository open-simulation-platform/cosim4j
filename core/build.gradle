import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

sourceCompatibility = 1.8

def os = OperatingSystem.current()

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    if (os.isLinux()) {
        compile project(':natives-linux')
    } else if (os.isWindows()) {
        compile project(':natives-win')
    }

    def slf4j_version = '1.7.25'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
    runtimeOnly group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4j_version
    
    def junit_version = '5.3.2'
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junit_version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit_version")
    
}

test {
    failFast(true)
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    baseName += "-shadow"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }

   if (project.hasProperty("mvnUser") && project.hasProperty("mvnPw")) {

       repositories {
           maven {
               credentials {
                   username mvnUser
                   password mvnPw
               }
               url "sftp://login.stud.ntnu.no:22/web/folk/laht/mvn"
           }
       }
       
   }

}

tasks.compileKotlin.dependsOn ':native:copyNativeLibs'
